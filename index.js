import{a as w,S as P,i as c}from"./assets/vendor-wqbdFd7k.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function s(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(t){if(t.ep)return;t.ep=!0;const r=s(t);fetch(t.href,r)}})();const m=async(a,e=1,s=40)=>await w({method:"get",url:"https://pixabay.com/api/",params:{page:e,per_page:s,key:"48819306-b63c1eb0b26be23d91021a657",q:a,image_type:"photo",orientation:"horizontal",safesearch:!0}});function f(a,e,s=!1){const o=a.map(({webformatURL:r,largeImageURL:n,tags:y,likes:L,views:b,comments:v,downloads:x})=>`<li class="gallery-item">
            <a class="gallery-link" href="${n}">
              <img
                class="gallery-image"
                src="${r}"
                alt="${y}"
              />
            </a>
            <div class="text-container">
                <p class="text"><span class="text-value">Likes</span> ${L}</p>
                <p class="text"><span class="text-value">Views</span> ${b}</p>
                <p class="text"><span class="text-value">Comments</span> ${v}</p>
                <p class="text"><span class="text-value">Downloads</span> ${x}</p>
            </div>
          </li>`).join("");s?e.insertAdjacentHTML("beforeend",o):e.innerHTML=o,new P(".gallery a",{captionsData:"alt",captionDelay:250}).refresh()}const h=document.querySelector(".submit-form"),u=document.querySelector(".gallery"),p=document.querySelector(".loader"),l=document.querySelector(".load-btn");let i=1,g=40,d="";h.addEventListener("submit",async a=>{if(a.preventDefault(),d=a.target.elements.searchInput.value.trim(),!d){c.error({position:"topRight",title:"Error",message:"Search query cannot be empty. Please enter a keyword!"});return}p.classList.remove("hidden"),u.innerHTML="",i=1;try{const e=await m(d,i,g);h.reset();const s=e.data.hits;if(s.length===0){c.error({position:"topRight",title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"});return}f(s,u),i+=1}catch(e){c.error({position:"topRight",title:"Error",message:"An error occurred while fetching data. Please try again later!"}),console.log(e)}finally{p.classList.add("hidden"),l.classList.remove("hidden")}});l.addEventListener("click",async a=>{a.preventDefault(),l.classList.add("hidden"),p.classList.remove("hidden");try{const e=await m(d,i,g),s=e.data.hits,o=e.data.totalHits;f(s,u,!0),i+=1,i*g>=o&&(l.classList.add("hidden"),c.info({position:"topRight",title:"Info",message:"We're sorry, but you've reached the end of search results."}))}catch(e){c.error({position:"topRight",title:"Error",message:"An error occurred while fetching data. Please try again later!"}),console.log(e)}finally{p.classList.add("hidden"),l.classList.remove("hidden")}});
//# sourceMappingURL=index.js.map
